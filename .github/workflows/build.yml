name: Build and Upload Plugin

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Maven
        run: |
          mvn clean package
          ls -l target/  # 列出 target 目录的内容，确保 JAR 文件存在
        working-directory: ${{ github.workspace }}/Lengbanlist - main

      - name: Extract Version Numbers
        id: version
        run: |
          cd "${{ github.workspace }}/Lengbanlist - main"
          FULL_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          BASE_VERSION=$(echo $FULL_VERSION | grep -Eo '[0-9]+\.[0-9]+\.[0-9]+')
          echo "full_version=$FULL_VERSION" >> $GITHUB_OUTPUT
          echo "base_version=$BASE_VERSION" >> $GITHUB_OUTPUT
          echo "JAR file will be named: Lengbanlist-${BASE_VERSION}-${{ steps.timestamp.outputs.timestamp }}.jar"

      - name: Generate Timestamp
        id: timestamp
        run: |
          echo "timestamp=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      - name: Create Artifact Directory
        run: |
          mkdir -p ${{ github.workspace }}/artifacts

      - name: Debug: List Target Directory
        run: |
          ls -l "${{ github.workspace }}/Lengbanlist - main/target/"

      - name: Copy JAR to Artifact Directory
        run: |
          JAR_PATH="${{ github.workspace }}/Lengbanlist - main/target/Lengbanlist-${{ steps.version.outputs.base_version }}-${{ steps.timestamp.outputs.timestamp }}.jar"
          if [ -f "$JAR_PATH" ]; then
            cp "$JAR_PATH" ${{ github.workspace }}/artifacts/
          else
            echo "Error: JAR file not found at $JAR_PATH"
            exit 1
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: Lengbanlist-${{ steps.version.outputs.base_version }}-${{ steps.timestamp.outputs.timestamp }}.jar
          path: ${{ github.workspace }}/artifacts/

      - name: Upload to KStore
        run: |
          cd ${{ github.workspace }}/artifacts

          # 创建存储目录
          RESPONSE=$(curl --location --request POST "https://api.kstore.space/api/v1/file/create" \
            --header "X-GitHub-Event: workflow_run" \
            --header "User-Agent: Apifox/1.0.0 (https://apifox.com)" \
            --form "access_token=${{ secrets.OSS }}" \
            --form "fileId=0" \
            --form "name=Lengbanlist-${{ steps.version.outputs.base_version }}-${{ steps.timestamp.outputs.timestamp }}.jar")

          DIR_ID=$(echo "$RESPONSE" | jq -r '.data.id')
          echo "DirectoryId: $DIR_ID"

          # 上传文件
          UPLOAD_RESPONSE=$(curl --location --request POST "https://upload.kstore.space/upload/$DIR_ID?access_token=${{ secrets.OSS }}" \
            -F "file=@Lengbanlist-${{ steps.version.outputs.base_version }}-${{ steps.timestamp.outputs.timestamp }}.jar")

          DOWNLOAD_URL=$(echo "$UPLOAD_RESPONSE" | jq -r '.data.downloadUrl')
          FILE_ID=$(echo "$UPLOAD_RESPONSE" | jq -r '.data.id')

          echo "FileId: $FILE_ID"
          echo "URL: $DOWNLOAD_URL"

          # 设为直接下载
          RESPONSE=$(curl --location --request POST "https://api.kstore.cc/api/v1/file/direct?access_token=${{ secrets.OSS }}" \
            --form "fileId=$FILE_ID" \
            --form "isDirect=1")

          echo "$RESPONSE"

          # 版本推送
          curl --get \
          --data-urlencode "key=${{ secrets.API_KEY }}" \
          --data-urlencode "commit=${{ github.sha }}" \
          --data-urlencode "branch=${{ github.ref }}" \
          --data-urlencode "version=${{ steps.version.outputs.full_version }}" \
          --data-urlencode "date=$(date -u +%Y-%m-%dT%H:%M:%SZ)" \
          --data-urlencode "link=$DOWNLOAD_URL" \
          --data-urlencode "release=false" \
          "https://service.fpsmaster.top/pushVersion"
